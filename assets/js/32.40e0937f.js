(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{390:function(s,e,t){"use strict";t.r(e);var a=t(45),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"ethereum-data-structure-basic-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-data-structure-basic-types"}},[s._v("#")]),s._v(" Ethereum Data Structure Basic Types")]),s._v(" "),t("p",[s._v("These types are used throughout the Ethereum data structures but are themselves not IPLD blocks.")]),s._v(" "),t("div",{staticClass:"language-ipldsch extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ipldsch"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Go big.Int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prefer presenting to users either as a number or a string view of the decimal number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for readability.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BigInt")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unsigned integer")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Used to explicity specify that an integer cannot be negative")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Uint")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Block nonce is an 8 byte binary representation of a block's nonce")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockNonce")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Hash represents the 32 byte KECCAK_256 hash of arbitrary data.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hash")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Address represents the 20 byte address of an Ethereum account.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Address")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Bloom represents a 256 byte bloom filter.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bloom")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Balance represents an account's balance in units of wei (1*10^-18 ETH)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Balance")])]),s._v(" BigInt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OpCode is a 1 byte EVM opcode")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token typedef"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OpCode")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bytes")]),s._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);